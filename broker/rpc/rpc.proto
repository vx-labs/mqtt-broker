syntax = "proto3";
import "github.com/vx-labs/mqtt-broker/topics/types.proto";
import "github.com/vx-labs/mqtt-broker/subscriptions/types.proto";
import "github.com/vx-labs/mqtt-broker/sessions/types.proto";

message SessionFilter {}
message CloseSessionInput {
  string ID = 1;
}
message CloseSessionOutput {
  string ID = 1;
}
message ListSessionsOutput{
  repeated sessions.Metadata Sessions = 1;
}
message MessagePublished {
  string Recipient = 1;
  bytes Topic = 2;
  int32 Qos = 3;
  bytes Payload = 4;
  bool Retained = 5;
  bool Dup = 6;
  string Tenant = 7;
}
message MessagePublishedOutput {
}
service BrokerService {
    rpc ListSessions(SessionFilter) returns (ListSessionsOutput);
    rpc CloseSession(CloseSessionInput) returns (CloseSessionOutput);
    rpc DistributeMessage(MessagePublished) returns (MessagePublishedOutput);
}