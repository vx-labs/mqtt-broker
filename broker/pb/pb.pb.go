// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	subscriptions "github.com/vx-labs/mqtt-broker/subscriptions"
	_ "github.com/vx-labs/mqtt-broker/topics"
	packet "github.com/vx-labs/mqtt-protocol/packet"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubscriptionFilter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionFilter) Reset()         { *m = SubscriptionFilter{} }
func (m *SubscriptionFilter) String() string { return proto.CompactTextString(m) }
func (*SubscriptionFilter) ProtoMessage()    {}
func (*SubscriptionFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}

func (m *SubscriptionFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionFilter.Unmarshal(m, b)
}
func (m *SubscriptionFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionFilter.Marshal(b, m, deterministic)
}
func (m *SubscriptionFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionFilter.Merge(m, src)
}
func (m *SubscriptionFilter) XXX_Size() int {
	return xxx_messageInfo_SubscriptionFilter.Size(m)
}
func (m *SubscriptionFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionFilter proto.InternalMessageInfo

type CloseSessionInput struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionInput) Reset()         { *m = CloseSessionInput{} }
func (m *CloseSessionInput) String() string { return proto.CompactTextString(m) }
func (*CloseSessionInput) ProtoMessage()    {}
func (*CloseSessionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}

func (m *CloseSessionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionInput.Unmarshal(m, b)
}
func (m *CloseSessionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionInput.Marshal(b, m, deterministic)
}
func (m *CloseSessionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionInput.Merge(m, src)
}
func (m *CloseSessionInput) XXX_Size() int {
	return xxx_messageInfo_CloseSessionInput.Size(m)
}
func (m *CloseSessionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionInput.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionInput proto.InternalMessageInfo

func (m *CloseSessionInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type CloseSessionOutput struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionOutput) Reset()         { *m = CloseSessionOutput{} }
func (m *CloseSessionOutput) String() string { return proto.CompactTextString(m) }
func (*CloseSessionOutput) ProtoMessage()    {}
func (*CloseSessionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{2}
}

func (m *CloseSessionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionOutput.Unmarshal(m, b)
}
func (m *CloseSessionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionOutput.Marshal(b, m, deterministic)
}
func (m *CloseSessionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionOutput.Merge(m, src)
}
func (m *CloseSessionOutput) XXX_Size() int {
	return xxx_messageInfo_CloseSessionOutput.Size(m)
}
func (m *CloseSessionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionOutput proto.InternalMessageInfo

func (m *CloseSessionOutput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ListSubscriptionsOutput struct {
	Subscriptions        []*subscriptions.Metadata `protobuf:"bytes,1,rep,name=Subscriptions,proto3" json:"Subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListSubscriptionsOutput) Reset()         { *m = ListSubscriptionsOutput{} }
func (m *ListSubscriptionsOutput) String() string { return proto.CompactTextString(m) }
func (*ListSubscriptionsOutput) ProtoMessage()    {}
func (*ListSubscriptionsOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{3}
}

func (m *ListSubscriptionsOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubscriptionsOutput.Unmarshal(m, b)
}
func (m *ListSubscriptionsOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubscriptionsOutput.Marshal(b, m, deterministic)
}
func (m *ListSubscriptionsOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubscriptionsOutput.Merge(m, src)
}
func (m *ListSubscriptionsOutput) XXX_Size() int {
	return xxx_messageInfo_ListSubscriptionsOutput.Size(m)
}
func (m *ListSubscriptionsOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubscriptionsOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubscriptionsOutput proto.InternalMessageInfo

func (m *ListSubscriptionsOutput) GetSubscriptions() []*subscriptions.Metadata {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

type MessagePublished struct {
	Recipient            string   `protobuf:"bytes,1,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Topic                []byte   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Qos                  int32    `protobuf:"varint,3,opt,name=Qos,proto3" json:"Qos,omitempty"`
	Payload              []byte   `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Retained             bool     `protobuf:"varint,5,opt,name=Retained,proto3" json:"Retained,omitempty"`
	Dup                  bool     `protobuf:"varint,6,opt,name=Dup,proto3" json:"Dup,omitempty"`
	Tenant               string   `protobuf:"bytes,7,opt,name=Tenant,proto3" json:"Tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePublished) Reset()         { *m = MessagePublished{} }
func (m *MessagePublished) String() string { return proto.CompactTextString(m) }
func (*MessagePublished) ProtoMessage()    {}
func (*MessagePublished) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{4}
}

func (m *MessagePublished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePublished.Unmarshal(m, b)
}
func (m *MessagePublished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePublished.Marshal(b, m, deterministic)
}
func (m *MessagePublished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePublished.Merge(m, src)
}
func (m *MessagePublished) XXX_Size() int {
	return xxx_messageInfo_MessagePublished.Size(m)
}
func (m *MessagePublished) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePublished.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePublished proto.InternalMessageInfo

func (m *MessagePublished) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MessagePublished) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *MessagePublished) GetQos() int32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

func (m *MessagePublished) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MessagePublished) GetRetained() bool {
	if m != nil {
		return m.Retained
	}
	return false
}

func (m *MessagePublished) GetDup() bool {
	if m != nil {
		return m.Dup
	}
	return false
}

func (m *MessagePublished) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type MessagePublishedOutput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePublishedOutput) Reset()         { *m = MessagePublishedOutput{} }
func (m *MessagePublishedOutput) String() string { return proto.CompactTextString(m) }
func (*MessagePublishedOutput) ProtoMessage()    {}
func (*MessagePublishedOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{5}
}

func (m *MessagePublishedOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePublishedOutput.Unmarshal(m, b)
}
func (m *MessagePublishedOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePublishedOutput.Marshal(b, m, deterministic)
}
func (m *MessagePublishedOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePublishedOutput.Merge(m, src)
}
func (m *MessagePublishedOutput) XXX_Size() int {
	return xxx_messageInfo_MessagePublishedOutput.Size(m)
}
func (m *MessagePublishedOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePublishedOutput.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePublishedOutput proto.InternalMessageInfo

type TransportMetadata struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Encrypted            bool     `protobuf:"varint,2,opt,name=Encrypted,proto3" json:"Encrypted,omitempty"`
	RemoteAddress        string   `protobuf:"bytes,3,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	Endpoint             string   `protobuf:"bytes,4,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransportMetadata) Reset()         { *m = TransportMetadata{} }
func (m *TransportMetadata) String() string { return proto.CompactTextString(m) }
func (*TransportMetadata) ProtoMessage()    {}
func (*TransportMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{6}
}

func (m *TransportMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransportMetadata.Unmarshal(m, b)
}
func (m *TransportMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransportMetadata.Marshal(b, m, deterministic)
}
func (m *TransportMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransportMetadata.Merge(m, src)
}
func (m *TransportMetadata) XXX_Size() int {
	return xxx_messageInfo_TransportMetadata.Size(m)
}
func (m *TransportMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TransportMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TransportMetadata proto.InternalMessageInfo

func (m *TransportMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransportMetadata) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *TransportMetadata) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *TransportMetadata) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type ConnectInput struct {
	TransportMetadata    *TransportMetadata `protobuf:"bytes,1,opt,name=TransportMetadata,proto3" json:"TransportMetadata,omitempty"`
	Connect              *packet.Connect    `protobuf:"bytes,2,opt,name=Connect,proto3" json:"Connect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ConnectInput) Reset()         { *m = ConnectInput{} }
func (m *ConnectInput) String() string { return proto.CompactTextString(m) }
func (*ConnectInput) ProtoMessage()    {}
func (*ConnectInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{7}
}

func (m *ConnectInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectInput.Unmarshal(m, b)
}
func (m *ConnectInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectInput.Marshal(b, m, deterministic)
}
func (m *ConnectInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectInput.Merge(m, src)
}
func (m *ConnectInput) XXX_Size() int {
	return xxx_messageInfo_ConnectInput.Size(m)
}
func (m *ConnectInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectInput.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectInput proto.InternalMessageInfo

func (m *ConnectInput) GetTransportMetadata() *TransportMetadata {
	if m != nil {
		return m.TransportMetadata
	}
	return nil
}

func (m *ConnectInput) GetConnect() *packet.Connect {
	if m != nil {
		return m.Connect
	}
	return nil
}

type ConnectOutput struct {
	ID                   string          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Token                string          `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	ConnAck              *packet.ConnAck `protobuf:"bytes,2,opt,name=ConnAck,proto3" json:"ConnAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConnectOutput) Reset()         { *m = ConnectOutput{} }
func (m *ConnectOutput) String() string { return proto.CompactTextString(m) }
func (*ConnectOutput) ProtoMessage()    {}
func (*ConnectOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{8}
}

func (m *ConnectOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectOutput.Unmarshal(m, b)
}
func (m *ConnectOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectOutput.Marshal(b, m, deterministic)
}
func (m *ConnectOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectOutput.Merge(m, src)
}
func (m *ConnectOutput) XXX_Size() int {
	return xxx_messageInfo_ConnectOutput.Size(m)
}
func (m *ConnectOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectOutput proto.InternalMessageInfo

func (m *ConnectOutput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ConnectOutput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ConnectOutput) GetConnAck() *packet.ConnAck {
	if m != nil {
		return m.ConnAck
	}
	return nil
}

type DisconnectInput struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Disconnect           *packet.Disconnect `protobuf:"bytes,2,opt,name=Disconnect,proto3" json:"Disconnect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DisconnectInput) Reset()         { *m = DisconnectInput{} }
func (m *DisconnectInput) String() string { return proto.CompactTextString(m) }
func (*DisconnectInput) ProtoMessage()    {}
func (*DisconnectInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{9}
}

func (m *DisconnectInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectInput.Unmarshal(m, b)
}
func (m *DisconnectInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectInput.Marshal(b, m, deterministic)
}
func (m *DisconnectInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectInput.Merge(m, src)
}
func (m *DisconnectInput) XXX_Size() int {
	return xxx_messageInfo_DisconnectInput.Size(m)
}
func (m *DisconnectInput) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectInput.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectInput proto.InternalMessageInfo

func (m *DisconnectInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DisconnectInput) GetDisconnect() *packet.Disconnect {
	if m != nil {
		return m.Disconnect
	}
	return nil
}

type DisconnectOutput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectOutput) Reset()         { *m = DisconnectOutput{} }
func (m *DisconnectOutput) String() string { return proto.CompactTextString(m) }
func (*DisconnectOutput) ProtoMessage()    {}
func (*DisconnectOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{10}
}

func (m *DisconnectOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectOutput.Unmarshal(m, b)
}
func (m *DisconnectOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectOutput.Marshal(b, m, deterministic)
}
func (m *DisconnectOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectOutput.Merge(m, src)
}
func (m *DisconnectOutput) XXX_Size() int {
	return xxx_messageInfo_DisconnectOutput.Size(m)
}
func (m *DisconnectOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectOutput.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectOutput proto.InternalMessageInfo

type PublishInput struct {
	ID                   string          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Publish              *packet.Publish `protobuf:"bytes,2,opt,name=Publish,proto3" json:"Publish,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PublishInput) Reset()         { *m = PublishInput{} }
func (m *PublishInput) String() string { return proto.CompactTextString(m) }
func (*PublishInput) ProtoMessage()    {}
func (*PublishInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{11}
}

func (m *PublishInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInput.Unmarshal(m, b)
}
func (m *PublishInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInput.Marshal(b, m, deterministic)
}
func (m *PublishInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInput.Merge(m, src)
}
func (m *PublishInput) XXX_Size() int {
	return xxx_messageInfo_PublishInput.Size(m)
}
func (m *PublishInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInput.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInput proto.InternalMessageInfo

func (m *PublishInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PublishInput) GetPublish() *packet.Publish {
	if m != nil {
		return m.Publish
	}
	return nil
}

type PublishOutput struct {
	PubAck               *packet.PubAck `protobuf:"bytes,1,opt,name=PubAck,proto3" json:"PubAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PublishOutput) Reset()         { *m = PublishOutput{} }
func (m *PublishOutput) String() string { return proto.CompactTextString(m) }
func (*PublishOutput) ProtoMessage()    {}
func (*PublishOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{12}
}

func (m *PublishOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishOutput.Unmarshal(m, b)
}
func (m *PublishOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishOutput.Marshal(b, m, deterministic)
}
func (m *PublishOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishOutput.Merge(m, src)
}
func (m *PublishOutput) XXX_Size() int {
	return xxx_messageInfo_PublishOutput.Size(m)
}
func (m *PublishOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishOutput.DiscardUnknown(m)
}

var xxx_messageInfo_PublishOutput proto.InternalMessageInfo

func (m *PublishOutput) GetPubAck() *packet.PubAck {
	if m != nil {
		return m.PubAck
	}
	return nil
}

type SubscribeInput struct {
	ID                   string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Subscribe            *packet.Subscribe `protobuf:"bytes,2,opt,name=Subscribe,proto3" json:"Subscribe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscribeInput) Reset()         { *m = SubscribeInput{} }
func (m *SubscribeInput) String() string { return proto.CompactTextString(m) }
func (*SubscribeInput) ProtoMessage()    {}
func (*SubscribeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{13}
}

func (m *SubscribeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeInput.Unmarshal(m, b)
}
func (m *SubscribeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeInput.Marshal(b, m, deterministic)
}
func (m *SubscribeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeInput.Merge(m, src)
}
func (m *SubscribeInput) XXX_Size() int {
	return xxx_messageInfo_SubscribeInput.Size(m)
}
func (m *SubscribeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeInput.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeInput proto.InternalMessageInfo

func (m *SubscribeInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SubscribeInput) GetSubscribe() *packet.Subscribe {
	if m != nil {
		return m.Subscribe
	}
	return nil
}

type SubscribeOutput struct {
	SubAck               *packet.SubAck `protobuf:"bytes,1,opt,name=SubAck,proto3" json:"SubAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SubscribeOutput) Reset()         { *m = SubscribeOutput{} }
func (m *SubscribeOutput) String() string { return proto.CompactTextString(m) }
func (*SubscribeOutput) ProtoMessage()    {}
func (*SubscribeOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{14}
}

func (m *SubscribeOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeOutput.Unmarshal(m, b)
}
func (m *SubscribeOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeOutput.Marshal(b, m, deterministic)
}
func (m *SubscribeOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeOutput.Merge(m, src)
}
func (m *SubscribeOutput) XXX_Size() int {
	return xxx_messageInfo_SubscribeOutput.Size(m)
}
func (m *SubscribeOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeOutput.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeOutput proto.InternalMessageInfo

func (m *SubscribeOutput) GetSubAck() *packet.SubAck {
	if m != nil {
		return m.SubAck
	}
	return nil
}

type UnsubscribeInput struct {
	ID                   string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Unsubscribe          *packet.Unsubscribe `protobuf:"bytes,2,opt,name=Unsubscribe,proto3" json:"Unsubscribe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UnsubscribeInput) Reset()         { *m = UnsubscribeInput{} }
func (m *UnsubscribeInput) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeInput) ProtoMessage()    {}
func (*UnsubscribeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{15}
}

func (m *UnsubscribeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeInput.Unmarshal(m, b)
}
func (m *UnsubscribeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeInput.Marshal(b, m, deterministic)
}
func (m *UnsubscribeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeInput.Merge(m, src)
}
func (m *UnsubscribeInput) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeInput.Size(m)
}
func (m *UnsubscribeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeInput.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeInput proto.InternalMessageInfo

func (m *UnsubscribeInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UnsubscribeInput) GetUnsubscribe() *packet.Unsubscribe {
	if m != nil {
		return m.Unsubscribe
	}
	return nil
}

type UnsubscribeOutput struct {
	UnsubAck             *packet.UnsubAck `protobuf:"bytes,1,opt,name=UnsubAck,proto3" json:"UnsubAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UnsubscribeOutput) Reset()         { *m = UnsubscribeOutput{} }
func (m *UnsubscribeOutput) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeOutput) ProtoMessage()    {}
func (*UnsubscribeOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{16}
}

func (m *UnsubscribeOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeOutput.Unmarshal(m, b)
}
func (m *UnsubscribeOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeOutput.Marshal(b, m, deterministic)
}
func (m *UnsubscribeOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeOutput.Merge(m, src)
}
func (m *UnsubscribeOutput) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeOutput.Size(m)
}
func (m *UnsubscribeOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeOutput.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeOutput proto.InternalMessageInfo

func (m *UnsubscribeOutput) GetUnsubAck() *packet.UnsubAck {
	if m != nil {
		return m.UnsubAck
	}
	return nil
}

type PingReqInput struct {
	ID                   string          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PingReq              *packet.PingReq `protobuf:"bytes,2,opt,name=PingReq,proto3" json:"PingReq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PingReqInput) Reset()         { *m = PingReqInput{} }
func (m *PingReqInput) String() string { return proto.CompactTextString(m) }
func (*PingReqInput) ProtoMessage()    {}
func (*PingReqInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{17}
}

func (m *PingReqInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReqInput.Unmarshal(m, b)
}
func (m *PingReqInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReqInput.Marshal(b, m, deterministic)
}
func (m *PingReqInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReqInput.Merge(m, src)
}
func (m *PingReqInput) XXX_Size() int {
	return xxx_messageInfo_PingReqInput.Size(m)
}
func (m *PingReqInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReqInput.DiscardUnknown(m)
}

var xxx_messageInfo_PingReqInput proto.InternalMessageInfo

func (m *PingReqInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PingReqInput) GetPingReq() *packet.PingReq {
	if m != nil {
		return m.PingReq
	}
	return nil
}

type PingReqOutput struct {
	PingResp             *packet.PingResp `protobuf:"bytes,1,opt,name=PingResp,proto3" json:"PingResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PingReqOutput) Reset()         { *m = PingReqOutput{} }
func (m *PingReqOutput) String() string { return proto.CompactTextString(m) }
func (*PingReqOutput) ProtoMessage()    {}
func (*PingReqOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{18}
}

func (m *PingReqOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReqOutput.Unmarshal(m, b)
}
func (m *PingReqOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReqOutput.Marshal(b, m, deterministic)
}
func (m *PingReqOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReqOutput.Merge(m, src)
}
func (m *PingReqOutput) XXX_Size() int {
	return xxx_messageInfo_PingReqOutput.Size(m)
}
func (m *PingReqOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReqOutput.DiscardUnknown(m)
}

var xxx_messageInfo_PingReqOutput proto.InternalMessageInfo

func (m *PingReqOutput) GetPingResp() *packet.PingResp {
	if m != nil {
		return m.PingResp
	}
	return nil
}

func init() {
	proto.RegisterType((*SubscriptionFilter)(nil), "SubscriptionFilter")
	proto.RegisterType((*CloseSessionInput)(nil), "CloseSessionInput")
	proto.RegisterType((*CloseSessionOutput)(nil), "CloseSessionOutput")
	proto.RegisterType((*ListSubscriptionsOutput)(nil), "ListSubscriptionsOutput")
	proto.RegisterType((*MessagePublished)(nil), "MessagePublished")
	proto.RegisterType((*MessagePublishedOutput)(nil), "MessagePublishedOutput")
	proto.RegisterType((*TransportMetadata)(nil), "TransportMetadata")
	proto.RegisterType((*ConnectInput)(nil), "ConnectInput")
	proto.RegisterType((*ConnectOutput)(nil), "ConnectOutput")
	proto.RegisterType((*DisconnectInput)(nil), "DisconnectInput")
	proto.RegisterType((*DisconnectOutput)(nil), "DisconnectOutput")
	proto.RegisterType((*PublishInput)(nil), "PublishInput")
	proto.RegisterType((*PublishOutput)(nil), "PublishOutput")
	proto.RegisterType((*SubscribeInput)(nil), "SubscribeInput")
	proto.RegisterType((*SubscribeOutput)(nil), "SubscribeOutput")
	proto.RegisterType((*UnsubscribeInput)(nil), "UnsubscribeInput")
	proto.RegisterType((*UnsubscribeOutput)(nil), "UnsubscribeOutput")
	proto.RegisterType((*PingReqInput)(nil), "PingReqInput")
	proto.RegisterType((*PingReqOutput)(nil), "PingReqOutput")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x86, 0x92, 0x26, 0xb1, 0x4f, 0x22, 0xdb, 0x62, 0x8a, 0x46, 0x10, 0x76, 0x61, 0x70, 0xc5,
	0xe0, 0x02, 0x2b, 0xbd, 0x7a, 0x1b, 0xba, 0x5d, 0x14, 0x9b, 0x5b, 0x77, 0x80, 0x81, 0x75, 0x4b,
	0xe9, 0x14, 0xd8, 0xee, 0xa6, 0x1f, 0x22, 0x25, 0x6c, 0x53, 0xaa, 0x48, 0x15, 0x0b, 0xf6, 0x00,
	0x7b, 0xa5, 0x3d, 0xd0, 0x1e, 0x64, 0x90, 0x44, 0x49, 0x94, 0xac, 0xac, 0x57, 0xe6, 0x39, 0xe7,
	0xe3, 0xe1, 0xf7, 0xe9, 0xfc, 0x18, 0x06, 0x49, 0x40, 0x92, 0x34, 0x56, 0xb1, 0xf7, 0xec, 0x96,
	0xab, 0xf7, 0x59, 0x40, 0xc2, 0x78, 0x3f, 0xff, 0xf8, 0xe7, 0xd3, 0x9d, 0x1f, 0xc8, 0xf9, 0xfe,
	0x83, 0x52, 0x4f, 0x83, 0x34, 0xde, 0xb2, 0x74, 0xae, 0xe2, 0x84, 0x87, 0x72, 0xae, 0xee, 0x12,
	0x26, 0xf5, 0x95, 0xef, 0x3e, 0x71, 0x45, 0x66, 0x81, 0x0c, 0x53, 0x9e, 0x28, 0x1e, 0x8b, 0xf6,
	0xcd, 0xaf, 0xee, 0xbb, 0x59, 0x84, 0xc3, 0x78, 0x37, 0x4f, 0xfc, 0x70, 0xcb, 0xd4, 0xbc, 0xa2,
	0x87, 0x1f, 0x02, 0xda, 0x18, 0xe9, 0x7e, 0xe2, 0x3b, 0xc5, 0x52, 0xfc, 0x39, 0x38, 0xaf, 0x76,
	0xb1, 0x64, 0x1b, 0x26, 0x25, 0x8f, 0xc5, 0x5a, 0x24, 0x99, 0x42, 0x23, 0x38, 0x5a, 0xaf, 0x5c,
	0x6b, 0x6a, 0xcd, 0x86, 0xf4, 0x68, 0xbd, 0xc2, 0x8f, 0x01, 0x99, 0xa0, 0x5f, 0x33, 0xd5, 0x87,
	0xfa, 0x0d, 0xae, 0x7e, 0xe6, 0x52, 0x99, 0x8f, 0x48, 0x0d, 0x7d, 0x01, 0x76, 0xcb, 0xed, 0x5a,
	0xd3, 0xe3, 0xd9, 0xf9, 0xe2, 0x8a, 0xb4, 0x04, 0x92, 0x37, 0x4c, 0xf9, 0x91, 0xaf, 0x7c, 0xda,
	0x46, 0xe3, 0x7f, 0x2c, 0x98, 0xbc, 0x61, 0x52, 0xfa, 0xb7, 0xec, 0x3a, 0x0b, 0x76, 0x5c, 0xbe,
	0x67, 0x11, 0xfa, 0x0c, 0x86, 0x94, 0x85, 0x3c, 0xe1, 0x4c, 0x28, 0xcd, 0xa2, 0x71, 0xa0, 0x87,
	0x70, 0x72, 0x93, 0x7f, 0x6f, 0xf7, 0x68, 0x6a, 0xcd, 0x2e, 0x68, 0x69, 0xa0, 0x09, 0x1c, 0xbf,
	0x8d, 0xa5, 0x7b, 0x3c, 0xb5, 0x66, 0x27, 0x34, 0x3f, 0x22, 0x17, 0xce, 0xae, 0xfd, 0xbb, 0x5d,
	0xec, 0x47, 0xee, 0x83, 0x02, 0x59, 0x99, 0xc8, 0x83, 0x01, 0x65, 0xca, 0xe7, 0x82, 0x45, 0xee,
	0xc9, 0xd4, 0x9a, 0x0d, 0x68, 0x6d, 0xe7, 0x79, 0x56, 0x59, 0xe2, 0x9e, 0x16, 0xee, 0xfc, 0x88,
	0x1e, 0xc1, 0xe9, 0x0d, 0x13, 0xbe, 0x50, 0xee, 0x59, 0x41, 0x45, 0x5b, 0xd8, 0x85, 0x47, 0x5d,
	0xe6, 0xe5, 0x37, 0xc1, 0x7f, 0x5b, 0xe0, 0xdc, 0xa4, 0xbe, 0x90, 0x49, 0x9c, 0xaa, 0x4a, 0x39,
	0x42, 0xf0, 0xe0, 0x17, 0x7f, 0xcf, 0xb4, 0xa0, 0xe2, 0x9c, 0x2b, 0x7d, 0x2d, 0xc2, 0xf4, 0x2e,
	0x51, 0x2c, 0x2a, 0xf4, 0x0c, 0x68, 0xe3, 0x40, 0x8f, 0xc1, 0xa6, 0x6c, 0x1f, 0x2b, 0xb6, 0x8c,
	0xa2, 0x94, 0xc9, 0x52, 0xdd, 0x90, 0xb6, 0x9d, 0xb9, 0x9a, 0xd7, 0x22, 0x4a, 0x62, 0x2e, 0x54,
	0x21, 0x74, 0x48, 0x6b, 0x1b, 0xff, 0x05, 0x17, 0xaf, 0x62, 0x21, 0x58, 0xa8, 0xca, 0xf2, 0xff,
	0xd8, 0x43, 0xac, 0x20, 0x74, 0xbe, 0x40, 0xe4, 0x20, 0x42, 0x7b, 0x54, 0x3c, 0x81, 0x33, 0x9d,
	0xb1, 0xe0, 0x7b, 0xbe, 0x18, 0x93, 0xb2, 0x1d, 0x89, 0x76, 0xd3, 0x2a, 0x8e, 0xff, 0x00, 0x5b,
	0x1f, 0xfb, 0xdb, 0xaa, 0xac, 0xe4, 0x96, 0x09, 0xad, 0xab, 0x34, 0xaa, 0x17, 0x96, 0xe1, 0xb6,
	0xef, 0x85, 0x65, 0xb8, 0xa5, 0x55, 0x1c, 0xbf, 0x83, 0xf1, 0x8a, 0xcb, 0xd0, 0x54, 0xd8, 0x7d,
	0x63, 0x01, 0xd0, 0x40, 0x74, 0x42, 0x54, 0x25, 0x6c, 0x22, 0xd4, 0x40, 0x61, 0x04, 0x93, 0xc6,
	0xd2, 0x35, 0x5d, 0xc3, 0x85, 0x2e, 0x73, 0xff, 0x3b, 0x4f, 0xe0, 0x4c, 0xc7, 0xbb, 0xac, 0xb5,
	0x9b, 0x56, 0x71, 0xfc, 0x1c, 0x6c, 0x7d, 0xd4, 0xdf, 0xe5, 0x0b, 0x38, 0xbd, 0xce, 0x82, 0x5c,
	0x70, 0x59, 0x8a, 0x91, 0x71, 0x35, 0xd7, 0xab, 0xa3, 0xf8, 0x2d, 0x8c, 0xf4, 0xf4, 0x04, 0xac,
	0x9f, 0xc5, 0x1c, 0x86, 0x35, 0x42, 0xf3, 0x70, 0xaa, 0x64, 0x75, 0x80, 0x36, 0x18, 0xfc, 0x3d,
	0x8c, 0x6b, 0xa3, 0x61, 0xb3, 0xe9, 0x65, 0xb3, 0xd1, 0x6c, 0xca, 0x5f, 0xfc, 0x3b, 0x4c, 0xde,
	0x09, 0xf9, 0xff, 0x7c, 0xbe, 0x85, 0x73, 0x03, 0xa3, 0x19, 0x5d, 0x56, 0x09, 0x8d, 0x10, 0x35,
	0x71, 0x78, 0x09, 0x8e, 0x61, 0x6a, 0x5e, 0x5f, 0xc2, 0xa0, 0x70, 0x36, 0xcc, 0x26, 0xad, 0x44,
	0x39, 0xb7, 0x1a, 0x51, 0xd4, 0x8b, 0x8b, 0x5b, 0xca, 0x3e, 0xdc, 0x5f, 0xaf, 0x32, 0x7e, 0x50,
	0xaf, 0xd2, 0x4d, 0xab, 0x38, 0x7e, 0x01, 0xb6, 0x3e, 0x36, 0x4c, 0x4a, 0x87, 0x4c, 0xba, 0x4c,
	0x2a, 0x3f, 0xad, 0x11, 0x8b, 0x7f, 0x8f, 0xc1, 0x7e, 0x59, 0x2c, 0xfd, 0x0d, 0x4b, 0x3f, 0xf2,
	0x90, 0xa1, 0x97, 0xe0, 0x1c, 0xac, 0x53, 0x74, 0x49, 0x0e, 0x77, 0xb8, 0xe7, 0x92, 0xfb, 0xf6,
	0xee, 0x73, 0xb8, 0x30, 0x17, 0x37, 0x42, 0xe4, 0x60, 0xd9, 0x7b, 0x97, 0xa4, 0x67, 0xb7, 0xff,
	0x00, 0xce, 0x8a, 0x4b, 0x95, 0xf2, 0x20, 0x53, 0x4c, 0x2f, 0x30, 0xe4, 0x90, 0xee, 0x2a, 0xf3,
	0xae, 0x48, 0xff, 0x76, 0x43, 0xb3, 0x7a, 0x03, 0x20, 0x9b, 0x98, 0xdb, 0xc5, 0x1b, 0x91, 0xf6,
	0xbc, 0x3f, 0x33, 0x67, 0x0f, 0x4d, 0x48, 0x67, 0x56, 0x3d, 0x87, 0x74, 0xc7, 0x2c, 0x4f, 0xae,
	0xdf, 0x43, 0x36, 0x31, 0x07, 0xce, 0x1b, 0x91, 0xf6, 0xd0, 0x10, 0xa3, 0xd5, 0xd1, 0x98, 0xb4,
	0x07, 0xc3, 0x9b, 0x90, 0x6e, 0x5b, 0x7f, 0xd3, 0x6a, 0x45, 0xe4, 0x90, 0x6e, 0xf3, 0x7a, 0x88,
	0x1c, 0x36, 0xdd, 0xac, 0x6e, 0x93, 0x9c, 0x8f, 0xd1, 0x50, 0x39, 0x1f, 0xb3, 0x29, 0x82, 0xd3,
	0xe2, 0xbf, 0xf8, 0xeb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x99, 0xfd, 0xe9, 0x36, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BrokerServiceClient is the client API for BrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrokerServiceClient interface {
	ListSubscriptions(ctx context.Context, in *SubscriptionFilter, opts ...grpc.CallOption) (*ListSubscriptionsOutput, error)
	CloseSession(ctx context.Context, in *CloseSessionInput, opts ...grpc.CallOption) (*CloseSessionOutput, error)
	DistributeMessage(ctx context.Context, in *MessagePublished, opts ...grpc.CallOption) (*MessagePublishedOutput, error)
	Connect(ctx context.Context, in *ConnectInput, opts ...grpc.CallOption) (*ConnectOutput, error)
	Disconnect(ctx context.Context, in *DisconnectInput, opts ...grpc.CallOption) (*DisconnectOutput, error)
	Publish(ctx context.Context, in *PublishInput, opts ...grpc.CallOption) (*PublishOutput, error)
	Subscribe(ctx context.Context, in *SubscribeInput, opts ...grpc.CallOption) (*SubscribeOutput, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeInput, opts ...grpc.CallOption) (*UnsubscribeOutput, error)
	PingReq(ctx context.Context, in *PingReqInput, opts ...grpc.CallOption) (*PingReqOutput, error)
}

type brokerServiceClient struct {
	cc *grpc.ClientConn
}

func NewBrokerServiceClient(cc *grpc.ClientConn) BrokerServiceClient {
	return &brokerServiceClient{cc}
}

func (c *brokerServiceClient) ListSubscriptions(ctx context.Context, in *SubscriptionFilter, opts ...grpc.CallOption) (*ListSubscriptionsOutput, error) {
	out := new(ListSubscriptionsOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/ListSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) CloseSession(ctx context.Context, in *CloseSessionInput, opts ...grpc.CallOption) (*CloseSessionOutput, error) {
	out := new(CloseSessionOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/CloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) DistributeMessage(ctx context.Context, in *MessagePublished, opts ...grpc.CallOption) (*MessagePublishedOutput, error) {
	out := new(MessagePublishedOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/DistributeMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) Connect(ctx context.Context, in *ConnectInput, opts ...grpc.CallOption) (*ConnectOutput, error) {
	out := new(ConnectOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) Disconnect(ctx context.Context, in *DisconnectInput, opts ...grpc.CallOption) (*DisconnectOutput, error) {
	out := new(DisconnectOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) Publish(ctx context.Context, in *PublishInput, opts ...grpc.CallOption) (*PublishOutput, error) {
	out := new(PublishOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) Subscribe(ctx context.Context, in *SubscribeInput, opts ...grpc.CallOption) (*SubscribeOutput, error) {
	out := new(SubscribeOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) Unsubscribe(ctx context.Context, in *UnsubscribeInput, opts ...grpc.CallOption) (*UnsubscribeOutput, error) {
	out := new(UnsubscribeOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) PingReq(ctx context.Context, in *PingReqInput, opts ...grpc.CallOption) (*PingReqOutput, error) {
	out := new(PingReqOutput)
	err := c.cc.Invoke(ctx, "/BrokerService/PingReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrokerServiceServer is the server API for BrokerService service.
type BrokerServiceServer interface {
	ListSubscriptions(context.Context, *SubscriptionFilter) (*ListSubscriptionsOutput, error)
	CloseSession(context.Context, *CloseSessionInput) (*CloseSessionOutput, error)
	DistributeMessage(context.Context, *MessagePublished) (*MessagePublishedOutput, error)
	Connect(context.Context, *ConnectInput) (*ConnectOutput, error)
	Disconnect(context.Context, *DisconnectInput) (*DisconnectOutput, error)
	Publish(context.Context, *PublishInput) (*PublishOutput, error)
	Subscribe(context.Context, *SubscribeInput) (*SubscribeOutput, error)
	Unsubscribe(context.Context, *UnsubscribeInput) (*UnsubscribeOutput, error)
	PingReq(context.Context, *PingReqInput) (*PingReqOutput, error)
}

// UnimplementedBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBrokerServiceServer struct {
}

func (*UnimplementedBrokerServiceServer) ListSubscriptions(ctx context.Context, req *SubscriptionFilter) (*ListSubscriptionsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubscriptions not implemented")
}
func (*UnimplementedBrokerServiceServer) CloseSession(ctx context.Context, req *CloseSessionInput) (*CloseSessionOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}
func (*UnimplementedBrokerServiceServer) DistributeMessage(ctx context.Context, req *MessagePublished) (*MessagePublishedOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeMessage not implemented")
}
func (*UnimplementedBrokerServiceServer) Connect(ctx context.Context, req *ConnectInput) (*ConnectOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedBrokerServiceServer) Disconnect(ctx context.Context, req *DisconnectInput) (*DisconnectOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedBrokerServiceServer) Publish(ctx context.Context, req *PublishInput) (*PublishOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}
func (*UnimplementedBrokerServiceServer) Subscribe(ctx context.Context, req *SubscribeInput) (*SubscribeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedBrokerServiceServer) Unsubscribe(ctx context.Context, req *UnsubscribeInput) (*UnsubscribeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedBrokerServiceServer) PingReq(ctx context.Context, req *PingReqInput) (*PingReqOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingReq not implemented")
}

func RegisterBrokerServiceServer(s *grpc.Server, srv BrokerServiceServer) {
	s.RegisterService(&_BrokerService_serviceDesc, srv)
}

func _BrokerService_ListSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).ListSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/ListSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).ListSubscriptions(ctx, req.(*SubscriptionFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSessionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).CloseSession(ctx, req.(*CloseSessionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_DistributeMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessagePublished)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).DistributeMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/DistributeMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).DistributeMessage(ctx, req.(*MessagePublished))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).Connect(ctx, req.(*ConnectInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).Disconnect(ctx, req.(*DisconnectInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).Publish(ctx, req.(*PublishInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).Subscribe(ctx, req.(*SubscribeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).Unsubscribe(ctx, req.(*UnsubscribeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_PingReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReqInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).PingReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BrokerService/PingReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).PingReq(ctx, req.(*PingReqInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BrokerService",
	HandlerType: (*BrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSubscriptions",
			Handler:    _BrokerService_ListSubscriptions_Handler,
		},
		{
			MethodName: "CloseSession",
			Handler:    _BrokerService_CloseSession_Handler,
		},
		{
			MethodName: "DistributeMessage",
			Handler:    _BrokerService_DistributeMessage_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _BrokerService_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _BrokerService_Disconnect_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _BrokerService_Publish_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _BrokerService_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _BrokerService_Unsubscribe_Handler,
		},
		{
			MethodName: "PingReq",
			Handler:    _BrokerService_PingReq_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}
