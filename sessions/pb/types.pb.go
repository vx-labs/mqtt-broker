// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Session struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=Tenant,proto3" json:"Tenant,omitempty"`
	Peer                 string   `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	WillTopic            []byte   `protobuf:"bytes,4,opt,name=WillTopic,proto3" json:"WillTopic,omitempty"`
	WillQoS              int32    `protobuf:"varint,5,opt,name=WillQoS,proto3" json:"WillQoS,omitempty"`
	WillPayload          []byte   `protobuf:"bytes,6,opt,name=WillPayload,proto3" json:"WillPayload,omitempty"`
	WillRetain           bool     `protobuf:"varint,7,opt,name=WillRetain,proto3" json:"WillRetain,omitempty"`
	Created              int64    `protobuf:"varint,8,opt,name=Created,proto3" json:"Created,omitempty"`
	ClientID             string   `protobuf:"bytes,9,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Transport            string   `protobuf:"bytes,12,opt,name=Transport,proto3" json:"Transport,omitempty"`
	RemoteAddress        string   `protobuf:"bytes,13,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	ClosureReason        string   `protobuf:"bytes,14,opt,name=ClosureReason,proto3" json:"ClosureReason,omitempty"`
	KeepaliveInterval    int32    `protobuf:"varint,15,opt,name=KeepaliveInterval,proto3" json:"KeepaliveInterval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Session) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Session) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *Session) GetWillTopic() []byte {
	if m != nil {
		return m.WillTopic
	}
	return nil
}

func (m *Session) GetWillQoS() int32 {
	if m != nil {
		return m.WillQoS
	}
	return 0
}

func (m *Session) GetWillPayload() []byte {
	if m != nil {
		return m.WillPayload
	}
	return nil
}

func (m *Session) GetWillRetain() bool {
	if m != nil {
		return m.WillRetain
	}
	return false
}

func (m *Session) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Session) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Session) GetTransport() string {
	if m != nil {
		return m.Transport
	}
	return ""
}

func (m *Session) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *Session) GetClosureReason() string {
	if m != nil {
		return m.ClosureReason
	}
	return ""
}

func (m *Session) GetKeepaliveInterval() int32 {
	if m != nil {
		return m.KeepaliveInterval
	}
	return 0
}

type SessionMetadataList struct {
	Sessions             []*Session `protobuf:"bytes,1,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionMetadataList) Reset()         { *m = SessionMetadataList{} }
func (m *SessionMetadataList) String() string { return proto.CompactTextString(m) }
func (*SessionMetadataList) ProtoMessage()    {}
func (*SessionMetadataList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *SessionMetadataList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionMetadataList.Unmarshal(m, b)
}
func (m *SessionMetadataList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionMetadataList.Marshal(b, m, deterministic)
}
func (m *SessionMetadataList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionMetadataList.Merge(m, src)
}
func (m *SessionMetadataList) XXX_Size() int {
	return xxx_messageInfo_SessionMetadataList.Size(m)
}
func (m *SessionMetadataList) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionMetadataList.DiscardUnknown(m)
}

var xxx_messageInfo_SessionMetadataList proto.InternalMessageInfo

func (m *SessionMetadataList) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type SessionCreateInput struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=Tenant,proto3" json:"Tenant,omitempty"`
	Peer                 string   `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	WillTopic            []byte   `protobuf:"bytes,4,opt,name=WillTopic,proto3" json:"WillTopic,omitempty"`
	WillQoS              int32    `protobuf:"varint,5,opt,name=WillQoS,proto3" json:"WillQoS,omitempty"`
	WillPayload          []byte   `protobuf:"bytes,6,opt,name=WillPayload,proto3" json:"WillPayload,omitempty"`
	WillRetain           bool     `protobuf:"varint,7,opt,name=WillRetain,proto3" json:"WillRetain,omitempty"`
	ClientID             string   `protobuf:"bytes,9,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Transport            string   `protobuf:"bytes,10,opt,name=Transport,proto3" json:"Transport,omitempty"`
	RemoteAddress        string   `protobuf:"bytes,11,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	KeepaliveInterval    int32    `protobuf:"varint,12,opt,name=KeepaliveInterval,proto3" json:"KeepaliveInterval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionCreateInput) Reset()         { *m = SessionCreateInput{} }
func (m *SessionCreateInput) String() string { return proto.CompactTextString(m) }
func (*SessionCreateInput) ProtoMessage()    {}
func (*SessionCreateInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *SessionCreateInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCreateInput.Unmarshal(m, b)
}
func (m *SessionCreateInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCreateInput.Marshal(b, m, deterministic)
}
func (m *SessionCreateInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCreateInput.Merge(m, src)
}
func (m *SessionCreateInput) XXX_Size() int {
	return xxx_messageInfo_SessionCreateInput.Size(m)
}
func (m *SessionCreateInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCreateInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCreateInput proto.InternalMessageInfo

func (m *SessionCreateInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SessionCreateInput) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *SessionCreateInput) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *SessionCreateInput) GetWillTopic() []byte {
	if m != nil {
		return m.WillTopic
	}
	return nil
}

func (m *SessionCreateInput) GetWillQoS() int32 {
	if m != nil {
		return m.WillQoS
	}
	return 0
}

func (m *SessionCreateInput) GetWillPayload() []byte {
	if m != nil {
		return m.WillPayload
	}
	return nil
}

func (m *SessionCreateInput) GetWillRetain() bool {
	if m != nil {
		return m.WillRetain
	}
	return false
}

func (m *SessionCreateInput) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *SessionCreateInput) GetTransport() string {
	if m != nil {
		return m.Transport
	}
	return ""
}

func (m *SessionCreateInput) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *SessionCreateInput) GetKeepaliveInterval() int32 {
	if m != nil {
		return m.KeepaliveInterval
	}
	return 0
}

type SessionCreateOutput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionCreateOutput) Reset()         { *m = SessionCreateOutput{} }
func (m *SessionCreateOutput) String() string { return proto.CompactTextString(m) }
func (*SessionCreateOutput) ProtoMessage()    {}
func (*SessionCreateOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *SessionCreateOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCreateOutput.Unmarshal(m, b)
}
func (m *SessionCreateOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCreateOutput.Marshal(b, m, deterministic)
}
func (m *SessionCreateOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCreateOutput.Merge(m, src)
}
func (m *SessionCreateOutput) XXX_Size() int {
	return xxx_messageInfo_SessionCreateOutput.Size(m)
}
func (m *SessionCreateOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCreateOutput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCreateOutput proto.InternalMessageInfo

type SessionByIDInput struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionByIDInput) Reset()         { *m = SessionByIDInput{} }
func (m *SessionByIDInput) String() string { return proto.CompactTextString(m) }
func (*SessionByIDInput) ProtoMessage()    {}
func (*SessionByIDInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *SessionByIDInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionByIDInput.Unmarshal(m, b)
}
func (m *SessionByIDInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionByIDInput.Marshal(b, m, deterministic)
}
func (m *SessionByIDInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionByIDInput.Merge(m, src)
}
func (m *SessionByIDInput) XXX_Size() int {
	return xxx_messageInfo_SessionByIDInput.Size(m)
}
func (m *SessionByIDInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionByIDInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionByIDInput proto.InternalMessageInfo

func (m *SessionByIDInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type SessionByClientIDInput struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionByClientIDInput) Reset()         { *m = SessionByClientIDInput{} }
func (m *SessionByClientIDInput) String() string { return proto.CompactTextString(m) }
func (*SessionByClientIDInput) ProtoMessage()    {}
func (*SessionByClientIDInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}

func (m *SessionByClientIDInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionByClientIDInput.Unmarshal(m, b)
}
func (m *SessionByClientIDInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionByClientIDInput.Marshal(b, m, deterministic)
}
func (m *SessionByClientIDInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionByClientIDInput.Merge(m, src)
}
func (m *SessionByClientIDInput) XXX_Size() int {
	return xxx_messageInfo_SessionByClientIDInput.Size(m)
}
func (m *SessionByClientIDInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionByClientIDInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionByClientIDInput proto.InternalMessageInfo

func (m *SessionByClientIDInput) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type SessionByPeerInput struct {
	Peer                 string   `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionByPeerInput) Reset()         { *m = SessionByPeerInput{} }
func (m *SessionByPeerInput) String() string { return proto.CompactTextString(m) }
func (*SessionByPeerInput) ProtoMessage()    {}
func (*SessionByPeerInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{6}
}

func (m *SessionByPeerInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionByPeerInput.Unmarshal(m, b)
}
func (m *SessionByPeerInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionByPeerInput.Marshal(b, m, deterministic)
}
func (m *SessionByPeerInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionByPeerInput.Merge(m, src)
}
func (m *SessionByPeerInput) XXX_Size() int {
	return xxx_messageInfo_SessionByPeerInput.Size(m)
}
func (m *SessionByPeerInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionByPeerInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionByPeerInput proto.InternalMessageInfo

func (m *SessionByPeerInput) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

type SessionFilterInput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionFilterInput) Reset()         { *m = SessionFilterInput{} }
func (m *SessionFilterInput) String() string { return proto.CompactTextString(m) }
func (*SessionFilterInput) ProtoMessage()    {}
func (*SessionFilterInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{7}
}

func (m *SessionFilterInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionFilterInput.Unmarshal(m, b)
}
func (m *SessionFilterInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionFilterInput.Marshal(b, m, deterministic)
}
func (m *SessionFilterInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionFilterInput.Merge(m, src)
}
func (m *SessionFilterInput) XXX_Size() int {
	return xxx_messageInfo_SessionFilterInput.Size(m)
}
func (m *SessionFilterInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionFilterInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionFilterInput proto.InternalMessageInfo

type SessionDeleteInput struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDeleteInput) Reset()         { *m = SessionDeleteInput{} }
func (m *SessionDeleteInput) String() string { return proto.CompactTextString(m) }
func (*SessionDeleteInput) ProtoMessage()    {}
func (*SessionDeleteInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{8}
}

func (m *SessionDeleteInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDeleteInput.Unmarshal(m, b)
}
func (m *SessionDeleteInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDeleteInput.Marshal(b, m, deterministic)
}
func (m *SessionDeleteInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDeleteInput.Merge(m, src)
}
func (m *SessionDeleteInput) XXX_Size() int {
	return xxx_messageInfo_SessionDeleteInput.Size(m)
}
func (m *SessionDeleteInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDeleteInput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDeleteInput proto.InternalMessageInfo

func (m *SessionDeleteInput) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type SessionDeleteOutput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDeleteOutput) Reset()         { *m = SessionDeleteOutput{} }
func (m *SessionDeleteOutput) String() string { return proto.CompactTextString(m) }
func (*SessionDeleteOutput) ProtoMessage()    {}
func (*SessionDeleteOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{9}
}

func (m *SessionDeleteOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDeleteOutput.Unmarshal(m, b)
}
func (m *SessionDeleteOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDeleteOutput.Marshal(b, m, deterministic)
}
func (m *SessionDeleteOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDeleteOutput.Merge(m, src)
}
func (m *SessionDeleteOutput) XXX_Size() int {
	return xxx_messageInfo_SessionDeleteOutput.Size(m)
}
func (m *SessionDeleteOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDeleteOutput.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDeleteOutput proto.InternalMessageInfo

type SessionStateTransition struct {
	Kind                 string                                `protobuf:"bytes,1,opt,name=Kind,proto3" json:"Kind,omitempty"`
	SessionCreated       *SessionStateTransitionSessionCreated `protobuf:"bytes,2,opt,name=SessionCreated,proto3" json:"SessionCreated,omitempty"`
	SessionDeleted       *SessionStateTransitionSessionDeleted `protobuf:"bytes,3,opt,name=SessionDeleted,proto3" json:"SessionDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *SessionStateTransition) Reset()         { *m = SessionStateTransition{} }
func (m *SessionStateTransition) String() string { return proto.CompactTextString(m) }
func (*SessionStateTransition) ProtoMessage()    {}
func (*SessionStateTransition) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{10}
}

func (m *SessionStateTransition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStateTransition.Unmarshal(m, b)
}
func (m *SessionStateTransition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStateTransition.Marshal(b, m, deterministic)
}
func (m *SessionStateTransition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStateTransition.Merge(m, src)
}
func (m *SessionStateTransition) XXX_Size() int {
	return xxx_messageInfo_SessionStateTransition.Size(m)
}
func (m *SessionStateTransition) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStateTransition.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStateTransition proto.InternalMessageInfo

func (m *SessionStateTransition) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SessionStateTransition) GetSessionCreated() *SessionStateTransitionSessionCreated {
	if m != nil {
		return m.SessionCreated
	}
	return nil
}

func (m *SessionStateTransition) GetSessionDeleted() *SessionStateTransitionSessionDeleted {
	if m != nil {
		return m.SessionDeleted
	}
	return nil
}

type SessionStateTransitionSessionCreated struct {
	Input                *SessionCreateInput `protobuf:"bytes,1,opt,name=Input,proto3" json:"Input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SessionStateTransitionSessionCreated) Reset()         { *m = SessionStateTransitionSessionCreated{} }
func (m *SessionStateTransitionSessionCreated) String() string { return proto.CompactTextString(m) }
func (*SessionStateTransitionSessionCreated) ProtoMessage()    {}
func (*SessionStateTransitionSessionCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{11}
}

func (m *SessionStateTransitionSessionCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStateTransitionSessionCreated.Unmarshal(m, b)
}
func (m *SessionStateTransitionSessionCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStateTransitionSessionCreated.Marshal(b, m, deterministic)
}
func (m *SessionStateTransitionSessionCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStateTransitionSessionCreated.Merge(m, src)
}
func (m *SessionStateTransitionSessionCreated) XXX_Size() int {
	return xxx_messageInfo_SessionStateTransitionSessionCreated.Size(m)
}
func (m *SessionStateTransitionSessionCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStateTransitionSessionCreated.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStateTransitionSessionCreated proto.InternalMessageInfo

func (m *SessionStateTransitionSessionCreated) GetInput() *SessionCreateInput {
	if m != nil {
		return m.Input
	}
	return nil
}

type SessionStateTransitionSessionDeleted struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionStateTransitionSessionDeleted) Reset()         { *m = SessionStateTransitionSessionDeleted{} }
func (m *SessionStateTransitionSessionDeleted) String() string { return proto.CompactTextString(m) }
func (*SessionStateTransitionSessionDeleted) ProtoMessage()    {}
func (*SessionStateTransitionSessionDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{12}
}

func (m *SessionStateTransitionSessionDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStateTransitionSessionDeleted.Unmarshal(m, b)
}
func (m *SessionStateTransitionSessionDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStateTransitionSessionDeleted.Marshal(b, m, deterministic)
}
func (m *SessionStateTransitionSessionDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStateTransitionSessionDeleted.Merge(m, src)
}
func (m *SessionStateTransitionSessionDeleted) XXX_Size() int {
	return xxx_messageInfo_SessionStateTransitionSessionDeleted.Size(m)
}
func (m *SessionStateTransitionSessionDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStateTransitionSessionDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStateTransitionSessionDeleted proto.InternalMessageInfo

func (m *SessionStateTransitionSessionDeleted) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*Session)(nil), "pb.Session")
	proto.RegisterType((*SessionMetadataList)(nil), "pb.SessionMetadataList")
	proto.RegisterType((*SessionCreateInput)(nil), "pb.SessionCreateInput")
	proto.RegisterType((*SessionCreateOutput)(nil), "pb.SessionCreateOutput")
	proto.RegisterType((*SessionByIDInput)(nil), "pb.SessionByIDInput")
	proto.RegisterType((*SessionByClientIDInput)(nil), "pb.SessionByClientIDInput")
	proto.RegisterType((*SessionByPeerInput)(nil), "pb.SessionByPeerInput")
	proto.RegisterType((*SessionFilterInput)(nil), "pb.SessionFilterInput")
	proto.RegisterType((*SessionDeleteInput)(nil), "pb.SessionDeleteInput")
	proto.RegisterType((*SessionDeleteOutput)(nil), "pb.SessionDeleteOutput")
	proto.RegisterType((*SessionStateTransition)(nil), "pb.SessionStateTransition")
	proto.RegisterType((*SessionStateTransitionSessionCreated)(nil), "pb.SessionStateTransitionSessionCreated")
	proto.RegisterType((*SessionStateTransitionSessionDeleted)(nil), "pb.SessionStateTransitionSessionDeleted")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xcd, 0x6a, 0xdb, 0x4c,
	0x14, 0x45, 0xb2, 0xe3, 0x38, 0x57, 0xf9, 0xf9, 0xbe, 0x69, 0xea, 0x0e, 0xa6, 0x14, 0x21, 0x0c,
	0x55, 0x21, 0x78, 0xe1, 0x96, 0x40, 0x36, 0x05, 0xc7, 0xa6, 0x20, 0xd2, 0x52, 0x77, 0x6c, 0xe8,
	0x7a, 0x1c, 0xdd, 0x85, 0x40, 0x95, 0x84, 0x34, 0x36, 0xf8, 0x21, 0xfa, 0x6e, 0x5d, 0xf6, 0x11,
	0xfa, 0x18, 0x45, 0x33, 0x92, 0x3c, 0xe3, 0xd8, 0xc4, 0xdb, 0xee, 0x74, 0xcf, 0x9c, 0x3b, 0xf7,
	0xe7, 0x1c, 0x8f, 0xc1, 0x11, 0x9b, 0x0c, 0x8b, 0x61, 0x96, 0xa7, 0x22, 0x25, 0x76, 0xb6, 0xf4,
	0x7e, 0xb6, 0xe0, 0x74, 0x8e, 0x45, 0x11, 0xa5, 0x09, 0xb9, 0x04, 0x3b, 0x98, 0x52, 0xcb, 0xb5,
	0xfc, 0x33, 0x66, 0x07, 0x53, 0xd2, 0x83, 0xce, 0x02, 0x13, 0x9e, 0x08, 0x6a, 0x4b, 0xac, 0x8a,
	0x08, 0x81, 0xf6, 0x0c, 0x31, 0xa7, 0x2d, 0x89, 0xca, 0x6f, 0xf2, 0x1a, 0xce, 0xbe, 0x47, 0x71,
	0xbc, 0x48, 0xb3, 0xe8, 0x91, 0xb6, 0x5d, 0xcb, 0x3f, 0x67, 0x5b, 0x80, 0x50, 0x38, 0x2d, 0x83,
	0x6f, 0xe9, 0x9c, 0x9e, 0xb8, 0x96, 0x7f, 0xc2, 0xea, 0x90, 0xb8, 0xe0, 0x94, 0x9f, 0x33, 0xbe,
	0x89, 0x53, 0x1e, 0xd2, 0x8e, 0xcc, 0xd4, 0x21, 0xf2, 0x06, 0xa0, 0x0c, 0x19, 0x0a, 0x1e, 0x25,
	0xf4, 0xd4, 0xb5, 0xfc, 0x2e, 0xd3, 0x90, 0xf2, 0xee, 0x49, 0x8e, 0x5c, 0x60, 0x48, 0xbb, 0xae,
	0xe5, 0xb7, 0x58, 0x1d, 0x92, 0x3e, 0x74, 0x27, 0x71, 0x84, 0x89, 0x08, 0xa6, 0xf4, 0x4c, 0xf6,
	0xda, 0xc4, 0x65, 0xbf, 0x8b, 0x9c, 0x27, 0x45, 0x96, 0xe6, 0x82, 0x9e, 0xcb, 0xc3, 0x2d, 0x40,
	0x06, 0x70, 0xc1, 0xf0, 0x47, 0x2a, 0x70, 0x1c, 0x86, 0x39, 0x16, 0x05, 0xbd, 0x90, 0x0c, 0x13,
	0x2c, 0x59, 0x93, 0x38, 0x2d, 0x56, 0x39, 0x32, 0xe4, 0x45, 0x9a, 0xd0, 0x4b, 0xc5, 0x32, 0x40,
	0x72, 0x03, 0xff, 0x3f, 0x20, 0x66, 0x3c, 0x8e, 0xd6, 0x18, 0x24, 0x02, 0xf3, 0x35, 0x8f, 0xe9,
	0x95, 0xdc, 0xc2, 0xd3, 0x03, 0xef, 0x23, 0xbc, 0xa8, 0xe4, 0xf8, 0x82, 0x82, 0x87, 0x5c, 0xf0,
	0xcf, 0x51, 0x21, 0xc8, 0x5b, 0xe8, 0x56, 0x70, 0x41, 0x2d, 0xb7, 0xe5, 0x3b, 0x23, 0x67, 0x98,
	0x2d, 0x87, 0x15, 0xc6, 0x9a, 0x43, 0xef, 0xb7, 0x0d, 0xa4, 0x0a, 0xd4, 0x1a, 0x82, 0x24, 0x5b,
	0x89, 0x7f, 0x54, 0xda, 0xa3, 0x05, 0x84, 0x67, 0x05, 0x74, 0xf6, 0x09, 0xb8, 0x57, 0x9a, 0xf3,
	0x43, 0xd2, 0xbc, 0x6c, 0xa4, 0x51, 0x9b, 0xfd, 0xba, 0x12, 0xd9, 0x4a, 0x78, 0x1e, 0xfc, 0x57,
	0xc1, 0xf7, 0x9b, 0x60, 0xba, 0x77, 0xdd, 0xde, 0x07, 0xe8, 0x35, 0x9c, 0x7a, 0x02, 0xc5, 0xd4,
	0x47, 0xb4, 0xcc, 0x11, 0x3d, 0xbf, 0x91, 0xf2, 0x7e, 0x53, 0x2a, 0xa1, 0x32, 0x6a, 0x89, 0xac,
	0xad, 0x44, 0xde, 0x75, 0xc3, 0xfc, 0x14, 0xc5, 0xa2, 0x62, 0x7a, 0x83, 0x06, 0x9d, 0x62, 0x8c,
	0x07, 0xac, 0xa0, 0x8d, 0xa5, 0x58, 0xd5, 0x58, 0xbf, 0xac, 0xa6, 0xe7, 0xb9, 0xe0, 0x02, 0xe5,
	0x6e, 0x23, 0x51, 0xbe, 0x13, 0x04, 0xda, 0x0f, 0x51, 0x12, 0xd6, 0x1d, 0x94, 0xdf, 0x64, 0x06,
	0x97, 0xc6, 0x72, 0x42, 0x69, 0x2c, 0x67, 0xe4, 0x6b, 0x36, 0xdd, 0xb9, 0xc7, 0xe4, 0xb3, 0x9d,
	0x7c, 0xed, 0x46, 0xd5, 0x57, 0x28, 0x4d, 0x79, 0xcc, 0x8d, 0x15, 0x9f, 0xed, 0xe4, 0x7b, 0x0b,
	0x18, 0x1c, 0xd3, 0x09, 0xb9, 0x81, 0x13, 0xb9, 0x2a, 0x39, 0xa0, 0x33, 0xea, 0x69, 0x05, 0xb5,
	0xdf, 0x14, 0x53, 0x24, 0xef, 0xf6, 0x99, 0x5b, 0xab, 0xea, 0xbb, 0x7b, 0x1f, 0xfd, 0xb1, 0xe1,
	0xaa, 0xfe, 0xd9, 0xce, 0x31, 0x5f, 0x47, 0x8f, 0x48, 0xee, 0xa0, 0xa3, 0x2a, 0x90, 0x03, 0x45,
	0xfb, 0xaf, 0x9e, 0xe0, 0x4a, 0xaf, 0x32, 0x55, 0x55, 0x32, 0x52, 0x35, 0xe1, 0x8d, 0x54, 0x5d,
	0x6a, 0xf2, 0x0e, 0xda, 0xa5, 0x75, 0xc9, 0xb5, 0x46, 0x68, 0xbc, 0xdc, 0xd7, 0x1f, 0x1a, 0x32,
	0x06, 0xd8, 0x3a, 0x98, 0xf4, 0x8d, 0x04, 0xc3, 0xd8, 0x46, 0x35, 0xe3, 0x29, 0xbb, 0x83, 0x8e,
	0xb2, 0xb3, 0xd1, 0xa8, 0xe6, 0xf0, 0xc3, 0xa9, 0xb7, 0xd0, 0x1a, 0xc7, 0xb1, 0x91, 0xa7, 0xf9,
	0xfd, 0x60, 0xde, 0xb2, 0x23, 0xff, 0xef, 0xde, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x72, 0x94,
	0x0a, 0x4b, 0xfe, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionsServiceClient is the client API for SessionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionsServiceClient interface {
	Create(ctx context.Context, in *SessionCreateInput, opts ...grpc.CallOption) (*SessionCreateOutput, error)
	Delete(ctx context.Context, in *SessionDeleteInput, opts ...grpc.CallOption) (*SessionDeleteOutput, error)
	ByID(ctx context.Context, in *SessionByIDInput, opts ...grpc.CallOption) (*Session, error)
	ByClientID(ctx context.Context, in *SessionByClientIDInput, opts ...grpc.CallOption) (*SessionMetadataList, error)
	ByPeer(ctx context.Context, in *SessionByPeerInput, opts ...grpc.CallOption) (*SessionMetadataList, error)
	All(ctx context.Context, in *SessionFilterInput, opts ...grpc.CallOption) (*SessionMetadataList, error)
}

type sessionsServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionsServiceClient(cc *grpc.ClientConn) SessionsServiceClient {
	return &sessionsServiceClient{cc}
}

func (c *sessionsServiceClient) Create(ctx context.Context, in *SessionCreateInput, opts ...grpc.CallOption) (*SessionCreateOutput, error) {
	out := new(SessionCreateOutput)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) Delete(ctx context.Context, in *SessionDeleteInput, opts ...grpc.CallOption) (*SessionDeleteOutput, error) {
	out := new(SessionDeleteOutput)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) ByID(ctx context.Context, in *SessionByIDInput, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/ByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) ByClientID(ctx context.Context, in *SessionByClientIDInput, opts ...grpc.CallOption) (*SessionMetadataList, error) {
	out := new(SessionMetadataList)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/ByClientID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) ByPeer(ctx context.Context, in *SessionByPeerInput, opts ...grpc.CallOption) (*SessionMetadataList, error) {
	out := new(SessionMetadataList)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/ByPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) All(ctx context.Context, in *SessionFilterInput, opts ...grpc.CallOption) (*SessionMetadataList, error) {
	out := new(SessionMetadataList)
	err := c.cc.Invoke(ctx, "/pb.SessionsService/All", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionsServiceServer is the server API for SessionsService service.
type SessionsServiceServer interface {
	Create(context.Context, *SessionCreateInput) (*SessionCreateOutput, error)
	Delete(context.Context, *SessionDeleteInput) (*SessionDeleteOutput, error)
	ByID(context.Context, *SessionByIDInput) (*Session, error)
	ByClientID(context.Context, *SessionByClientIDInput) (*SessionMetadataList, error)
	ByPeer(context.Context, *SessionByPeerInput) (*SessionMetadataList, error)
	All(context.Context, *SessionFilterInput) (*SessionMetadataList, error)
}

// UnimplementedSessionsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSessionsServiceServer struct {
}

func (*UnimplementedSessionsServiceServer) Create(ctx context.Context, req *SessionCreateInput) (*SessionCreateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSessionsServiceServer) Delete(ctx context.Context, req *SessionDeleteInput) (*SessionDeleteOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedSessionsServiceServer) ByID(ctx context.Context, req *SessionByIDInput) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByID not implemented")
}
func (*UnimplementedSessionsServiceServer) ByClientID(ctx context.Context, req *SessionByClientIDInput) (*SessionMetadataList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByClientID not implemented")
}
func (*UnimplementedSessionsServiceServer) ByPeer(ctx context.Context, req *SessionByPeerInput) (*SessionMetadataList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByPeer not implemented")
}
func (*UnimplementedSessionsServiceServer) All(ctx context.Context, req *SessionFilterInput) (*SessionMetadataList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method All not implemented")
}

func RegisterSessionsServiceServer(s *grpc.Server, srv SessionsServiceServer) {
	s.RegisterService(&_SessionsService_serviceDesc, srv)
}

func _SessionsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionCreateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).Create(ctx, req.(*SessionCreateInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionsService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionDeleteInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).Delete(ctx, req.(*SessionDeleteInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionsService_ByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionByIDInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).ByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/ByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).ByID(ctx, req.(*SessionByIDInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionsService_ByClientID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionByClientIDInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).ByClientID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/ByClientID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).ByClientID(ctx, req.(*SessionByClientIDInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionsService_ByPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionByPeerInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).ByPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/ByPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).ByPeer(ctx, req.(*SessionByPeerInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionsService_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionFilterInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServiceServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SessionsService/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServiceServer).All(ctx, req.(*SessionFilterInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SessionsService",
	HandlerType: (*SessionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SessionsService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SessionsService_Delete_Handler,
		},
		{
			MethodName: "ByID",
			Handler:    _SessionsService_ByID_Handler,
		},
		{
			MethodName: "ByClientID",
			Handler:    _SessionsService_ByClientID_Handler,
		},
		{
			MethodName: "ByPeer",
			Handler:    _SessionsService_ByPeer_Handler,
		},
		{
			MethodName: "All",
			Handler:    _SessionsService_All_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}
