syntax = "proto3";
package pb;
import "github.com/vx-labs/mqtt-protocol/packet/pb.proto";


message QueueMetadata {
  string ID = 1;
}

message QueueMetadataList {
  repeated QueueMetadata Queues = 1;
}

message QueueCreateInput {
  string id = 1;
}

message QueueCreateOutput {}

message QueueDeleteInput {
  string id = 1;
}

message QueueDeleteOutput {}

message QueuePutMessageInput {
  string id = 1;
  packet.Publish publish = 2;
}
message QueuePutMessageOutput {}

message QueuePutMessageBatchInput {
  repeated QueuePutMessageInput Batches = 1;
}
message QueuePutMessageBatchOutput {}

message QueueGetMessagesInput {
  string id = 1;
  uint64 offset = 2;
}
message AckMessageInput {
  string id = 1;
  uint64 offset = 2;
}
message AckMessageOutput {}

message QueueGetMessagesOutput {
  string id = 1;
  uint64 offset = 2;
  repeated packet.Publish publishes = 3;
  uint64 ackOffset = 4;
}
service QueuesService {
  rpc Create(QueueCreateInput) returns (QueueCreateOutput);
  rpc Delete(QueueDeleteInput) returns (QueueDeleteOutput);
  rpc PutMessage(QueuePutMessageInput) returns (QueuePutMessageOutput);
  rpc PutMessageBatch(QueuePutMessageBatchInput) returns (QueuePutMessageBatchOutput);
  rpc AckMessage(AckMessageInput) returns (AckMessageOutput);
  rpc StreamMessages(QueueGetMessagesInput) returns (stream QueueGetMessagesOutput);
}
message QueuesStateTransition {
  string Kind = 1;
  QueueStateTransitionQueueCreated QueueCreated = 2;
  QueueStateTransitionQueueDeleted QueueDeleted = 3;
  QueueStateTransitionMessagePut QueueMessagePut = 4;
  QueueStateTransitionMessagePutBatch QueueMessagePutBatch = 5;
  QueueStateTransitionMessageInflightSet MessageInflightSet = 6;
  QueueStateTransitionMessageDeleted MessageDeleted = 7;
  QueueStateTransitionMessageAcked MessageAcked = 8;
}
message QueueStateTransitionQueueCreated {
  QueueMetadata Input = 1;
}
message QueueStateTransitionQueueDeleted {
  string ID = 1;
}
message QueueStateTransitionMessagePut {
  string QueueID = 1;
  uint64 Offset = 2;
  bytes Payload = 3;
}
message QueueStateTransitionMessageInflightSet {
  string QueueID = 1;
  uint64 Offset = 2;
  uint64 Deadline = 3;
}
message QueueStateTransitionMessageAcked {
  string QueueID = 1;
  uint64 Offset = 2;
}
message QueueStateTransitionMessageDeleted {
  string QueueID = 1;
  uint64 Offset = 2;
}
message QueueStateTransitionMessagePutBatch {
  repeated QueueStateTransitionMessagePut batches = 1;
}