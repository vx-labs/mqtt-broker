syntax = "proto3";
package pb;
import "github.com/vx-labs/mqtt-protocol/packet/pb.proto";


message QueueMetadata {
  string ID = 1;
}

message QueueMetadataList {
  repeated QueueMetadata Queues = 1;
}

message QueueCreateInput {
  string id = 1;
}

message QueueCreateOutput {}

message QueueDeleteInput {
  string id = 1;
}

message QueueDeleteOutput {}

message QueuePutMessageInput {
  string id = 1;
  packet.Publish publish = 2;
}
message QueuePutMessageOutput {}

message QueueGetMessagesInput {
  string id = 1;
  uint64 offset = 2;
}
message QueueGetMessagesOutput {
  string id = 1;
  uint64 offset = 2;
  repeated packet.Publish publishes = 3;
}
message QueueGetMessagesBatchInput {
  repeated QueueGetMessagesInput batches = 1;
}
message QueueGetMessagesBatchOutput {
  repeated QueueGetMessagesOutput batches = 1;
}

service QueuesService {
  rpc Create(QueueCreateInput) returns (QueueCreateOutput);
  rpc Delete(QueueDeleteInput) returns (QueueDeleteOutput);
  rpc PutMessage(QueuePutMessageInput) returns (QueuePutMessageOutput);
  rpc GetMessages(QueueGetMessagesInput) returns (QueueGetMessagesOutput);
  rpc GetMessagesBatch(QueueGetMessagesBatchInput) returns (QueueGetMessagesBatchOutput);
}
message QueuesStateTransition {
  string Kind = 1;
  QueueStateTransitionQueueCreated QueueCreated = 2;
  QueueStateTransitionQueueDeleted QueueDeleted = 3;
  QueueStateTransitionMessagePut QueueMessagePut = 4;
}

message QueueStateTransitionQueueCreated {
  QueueMetadata Input = 1;
}

message QueueStateTransitionQueueDeleted {
  string ID = 1;
}
message QueueStateTransitionMessagePut {
  string QueueID = 1;
  uint64 Offset = 2;
  bytes Payload = 3;
}